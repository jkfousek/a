// Place your key bindings in this file to override the defaults
[
  {
    "key": "alt+win+x",
    "command": "extension.colorHighlight"
  },
  {
    "key": "alt+win+c",
    "command": "editor.action.showOrFocusStandaloneColorPicker"
  },
  {
    "key": "alt+win+c",
    "command": "todohighlight.toggleHighlight"
  },
  {
    "key": "ctrl+shift+o backspace",
    "command": "firacode.activate"
  },
  {
    "key": "ctrl+1",
    "command": "inlineChat.unstash",
    "when": "inlineChatHasStashedSession && !editorReadonly"
  },
  {
    "key": "ctrl+z",
    "command": "-inlineChat.unstash",
    "when": "inlineChatHasStashedSession && !editorReadonly"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "workbench.action.chat.previousCodeBlock",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.action.chat.previousCodeBlock",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "workbench.files.action.createFileFromExplorer",
    "when": "view == 'workbench.explorer.fileView'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "github.copilot.chat.rerunWithCopilotDebug",
    "when": "github.copilot-chat.activated && terminalFocus && terminalShellIntegrationEnabled && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-github.copilot.chat.rerunWithCopilotDebug",
    "when": "github.copilot-chat.activated && terminalFocus && terminalShellIntegrationEnabled && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+.",
    "command": "-workbench.action.chat.toggleAgentMode",
    "when": "chatHasToolsAgent && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "workbench.action.chat.openEditSession",
    "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.action.chat.openEditSession",
    "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-notebook.cell.openFailureActions",
    "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.changeDropType",
    "when": "dropWidgetVisible"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.changePasteType",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffWithNext",
    "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffWithWorking",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+a ctrl+d",
    "command": "expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "/ /",
    "command": "workbench.action.chat.newEditSession",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.action.chat.newEditSession",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "key": "ctrl+shift+f \\",
    "command": "-workbench.panel.chatEditing",
    "when": "workbench.panel.chat.view.edits.active"
  },
  //-------important-------
  {
    "key": "ctrl+,",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+.",
    "command": "workbench.panel.chatEditing",
    "when": "workbench.panel.chat.view.edits.active"
  },
  {
    "key": "ctrl+l",
    "command": "livePreview.start.preview.atFile",
    "when": "!notebookEditorFocused && editorLangId == 'html'"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newEditSession",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+shift+/ /",
    "command": "notebook.addFindMatchToSelection",
    "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+d",
    "command": "-notebook.addFindMatchToSelection",
    "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "/ /+ctrl",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+/",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+'",
    "command": "workbench.view.remote"
  },
  {
    "key": "ctrl+shift+;",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  }
]
